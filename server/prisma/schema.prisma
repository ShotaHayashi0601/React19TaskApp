// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String @id @default(uuid())
  name  String
  email String @unique
  tasks Task[] @relation("UserTasks")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

model Task {
  id           String     @id @default(uuid())
  title        String
  description  String?
  status       TaskStatus @default(PENDING)
  expectedTime Int
  actualTime   Int?
  dueDate      String?

  userId String
  user   User   @relation("UserTasks", fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  order Int @default(0)

  @@index([userId], name: "task_userId_idx")
  @@index([userId, status], name: "task_userId_status_idx")
  @@index([userId, dueDate], name: "task_userId_dueDate_idx")
}

model HealthCheck {
  id        String   @id @default(uuid())
  status    String   @default("OK")
  checkedAt DateTime @default(now())
}

enum TaskStatus {
  PENDING
  IN_PROGRESS
  COMPLETED
}
